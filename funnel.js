import { requireAuth, attachLogout, getJSON, setJSON, escapeHtml, uid, daysSince } from './core.js';const s=requireAuth(); attachLogout();const storageKey='club_portal_funnel_v3';function getData(){return getJSON(storageKey,[])} function setData(r){setJSON(storageKey,r)}const addBtn=document.getElementById('addCardBtn');const exportBtn=document.getElementById('exportFunnelBtn');const clearBtn=document.getElementById('clearFunnelBtn');const alertsBox=document.getElementById('alertsBox');const alertsRows=document.getElementById('alertsRows');const fType=document.getElementById('fType');const fStage=document.getElementById('fStage');const fClub=document.getElementById('fClub');const fBegeleid=document.getElementById('fBegeleid');const fStartFrom=document.getElementById('fStartFrom');const fStartTo=document.getElementById('fStartTo');const tiles=document.getElementById('metricTiles');const listBody=document.querySelector('#listTable tbody');function withinDateRange(d){if(!d) return true; const x=new Date(d).getTime(); const a=fStartFrom.value?new Date(fStartFrom.value).getTime():-Infinity; const b=fStartTo.value?new Date(fStartTo.value).getTime():Infinity; return x>=a && x<=b;}function filtered(items){return items.filter(it=>((!fType.value||it.typeTraject===fType.value)&&(!fStage.value||it.stage===fStage.value)&&(!fClub.value||String(it.clubondersteuner||'').toLowerCase().includes(fClub.value.toLowerCase()))&&(!fBegeleid.value||String(it.trajectbegeleider||'').toLowerCase().includes(fBegeleid.value.toLowerCase()))&&withinDateRange(it.startDate)))}function durationDays(start,end){if(!start||!end) return null; const s=new Date(start).getTime(); const e=new Date(end).getTime(); if(isNaN(s)||isNaN(e)) return null; return Math.max(0, Math.round((e-s)/(1000*60*60*24)));}function fmtMoney(n){const x=Number(n||0); return x.toLocaleString('nl-NL',{style:'currency',currency:'EUR'});}function computeMetrics(rows){const total=rows.length; const byType=['CKC','Rabo Clubsupport','Verenigingsmanager','Verduurzaming'].map(t=>({type:t,count:rows.filter(r=>r.typeTraject===t).length})); const durations=rows.map(r=>durationDays(r.startDate,r.endDateExpected)).filter(v=>typeof v==='number'); const avg=durations.length?Math.round(durations.reduce((a,b)=>a+b,0)/durations.length):0; const median=durations.length?durations.sort((a,b)=>a-b)[Math.floor(durations.length/2)]:0; const budgetSum=rows.reduce((s,r)=>s+(Number(r.costBudget)||0),0); const actualSum=rows.reduce((s,r)=>s+(Number(r.costActual)||0),0); return {total,byType,avg,median,budgetSum,actualSum};}function renderMetrics(rows){const m=computeMetrics(rows); tiles.innerHTML=''; const el=(title,value,sub=null)=>{const a=document.createElement('div'); a.className='tile'; a.style.alignItems='flex-start'; a.innerHTML=`<div class="icon">ðŸ“Š</div><div><h3>${escapeHtml(title)}</h3><p><strong>${escapeHtml(String(value))}</strong>${sub?`<br><span class="small">${escapeHtml(sub)}</span>`:''}</p></div>`; return a;}; tiles.appendChild(el('Totaal trajecten (filter)', m.total)); tiles.appendChild(el('Gemiddelde duur (dagen, gepland)', m.avg, `Mediaan: ${m.median}`)); tiles.appendChild(el('Begroot totaal', fmtMoney(m.budgetSum))); tiles.appendChild(el('Besteed totaal', fmtMoney(m.actualSum))); m.byType.forEach(x=>tiles.appendChild(el(`${x.type}`, x.count)));}function renderList(rows){listBody.innerHTML=''; rows.forEach(r=>{const dur=durationDays(r.startDate,r.endDateExpected); const tr=document.createElement('tr'); tr.innerHTML=`<td>${escapeHtml(r.vereniging||'')}</td><td>${escapeHtml(r.typeTraject||'')}</td><td>${escapeHtml(r.stage||'')}</td><td>${escapeHtml(r.clubondersteuner||'')}</td><td>${escapeHtml(r.trajectbegeleider||'')}</td><td>${r.startDate?new Date(r.startDate).toLocaleDateString():'â€”'}</td><td>${r.endDateExpected?new Date(r.endDateExpected).toLocaleDateString():'â€”'}</td><td>${dur??'â€”'}</td><td>${fmtMoney(r.costBudget)}</td><td>${fmtMoney(r.costActual)}</td>`; listBody.appendChild(tr);});}function renderBoard(){document.querySelectorAll('.dropzone').forEach(z=>z.innerHTML=''); const rows=getData(); const alerts=[]; for(const r of rows){const card=document.createElement('div'); card.className='card-item'; card.draggable=true; card.dataset.id=r.id; const start=r.startDate?new Date(r.startDate).toLocaleDateString():'â€”'; const end=r.endDateExpected?new Date(r.endDateExpected).toLocaleDateString():'â€”'; card.innerHTML=`<div class="title">${escapeHtml(r.vereniging||'(onbekende vereniging)')}</div><div class="small">${escapeHtml(r.typeTraject||'')}</div><div class="badges"><span class="badge">Start: ${start}</span><span class="badge">Einde: ${end}</span><span class="badge">Clubondersteuner: ${escapeHtml(r.clubondersteuner||'-')}</span><span class="badge">Begeleider: ${escapeHtml(r.trajectbegeleider||'-')}</span>${daysSince(r.lastUpdate)>=7&&r.stage!=='afgerond'?'<span class="badge warn">âš  >7 dagen stil</span>':''}${r.stage==='afgerond'?'<span class="badge ok">âœ“ klaar</span>':''}</div>`; card.addEventListener('dragstart',e=>{e.dataTransfer.setData('text/plain',r.id)}); card.addEventListener('click',()=>openModal(r.id)); const zone=document.querySelector(`.dropzone[data-stage="${r.stage}"]`); if(zone) zone.appendChild(card); if(daysSince(r.lastUpdate)>=7&&r.stage!=='afgerond') alerts.push(r);} if(alerts.length){alertsBox.classList.remove('hidden'); alertsRows.innerHTML=''; for(const a of alerts){const row=document.createElement('div'); row.className='row'; row.innerHTML=`<div><strong>${escapeHtml(a.vereniging)}</strong> â€” ${escapeHtml(a.typeTraject)} <span class="small">(geen update sinds ${daysSince(a.lastUpdate)} dagen)</span></div><div><button class="ok" data-id="${a.id}" data-action="touch">Markeer geÃ¼pdatet</button><button class="ghost" data-id="${a.id}" data-action="open">Open</button></div>`; alertsRows.appendChild(row);} } else {alertsBox.classList.add('hidden');}}function recalc(){const rows=filtered(getData()); renderMetrics(rows); renderList(rows);}function setupDnD(){document.querySelectorAll('.dropzone').forEach(zone=>{zone.addEventListener('dragover',e=>e.preventDefault()); zone.addEventListener('drop',e=>{e.preventDefault(); const id=e.dataTransfer.getData('text/plain'); const stage=zone.dataset.stage; const rows=getData(); const i=rows.findIndex(x=>x.id===id); if(i<0) return; rows[i].stage=stage; setData(rows); renderBoard(); recalc();});});}function openModal(id=null){const modal=document.getElementById('cardModal'); const form=document.getElementById('cardForm'); const title=document.getElementById('modalTitle'); modal.classList.add('show'); const rows=getData(); let data={id:uid(), vereniging:'', typeTraject:'', clubondersteuner:'', trajectbegeleider:'', startDate:'', endDateExpected:'', costBudget:'', costActual:'', stage:'intake', notes:'', lastUpdate:new Date().toISOString().slice(0,10)}; if(id){const idx=rows.findIndex(x=>x.id===id); if(idx>=0) data=rows[idx];} for(const [k,v] of Object.entries(data)){const el=form.querySelector(`[name="${k}"]`); if(el) el.value=v??'';} title.textContent=id?'Traject bewerken':'Nieuw traject'; form.onsubmit=(e)=>{e.preventDefault(); const fd=new FormData(form); const obj=Object.fromEntries(fd.entries()); if(!obj.lastUpdate) obj.lastUpdate=new Date().toISOString().slice(0,10); const list=getData(); const idx=list.findIndex(x=>x.id===obj.id); if(idx>=0) list[idx]=obj; else list.push(obj); setData(list); modal.classList.remove('show'); renderBoard(); recalc();}; document.getElementById('cancelModalBtn').onclick=()=>modal.classList.remove('show');}addBtn.addEventListener('click',()=>openModal(null));exportBtn.addEventListener('click',()=>{const blob=new Blob([JSON.stringify(getData(),null,2)],{type:'application/json'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=`funnel-v3-${new Date().toISOString().slice(0,10)}.json`; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);});clearBtn.addEventListener('click',()=>{if(confirm('Alles wissen?')){setData([]); renderBoard(); recalc();}});alertsRows.addEventListener('click',e=>{const id=e.target.dataset.id; const action=e.target.dataset.action; if(!id||!action) return; const rows=getData(); const idx=rows.findIndex(x=>x.id===id); if(idx<0) return; if(action==='touch'){rows[idx].lastUpdate=new Date().toISOString().slice(0,10); setData(rows); renderBoard(); recalc();} if(action==='open'){openModal(id);}});document.getElementById('exportCsvBtn').addEventListener('click',()=>{const rows=filtered(getData()); const headers=['id','vereniging','typeTraject','stage','clubondersteuner','trajectbegeleider','startDate','endDateExpected','plannedDurationDays','costBudget','costActual','lastUpdate','notes']; const csv=[headers.join(',')].concat(rows.map(r=>{const vals={...r, plannedDurationDays: (function(){const d1=r.startDate, d2=r.endDateExpected; if(!d1||!d2) return ''; const s=new Date(d1).getTime(), e=new Date(d2).getTime(); if(isNaN(s)||isNaN(e)) return ''; return Math.max(0, Math.round((e-s)/(1000*60*60*24)));})()}; return headers.map(h=>`"${String(vals[h]??'').replaceAll('"','""')}"`).join(',');})).join('\n'); const blob=new Blob([csv],{type:'text/csv;charset=utf-8;'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=`funnel-export-${new Date().toISOString().slice(0,10)}.csv`; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);});function init(){renderBoard(); setupDnD(); [fType,fStage,fClub,fBegeleid,fStartFrom,fStartTo].forEach(el=>el.addEventListener('input',recalc)); recalc();}init();