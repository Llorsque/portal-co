import { requireAuth, attachLogout, getJSON, setJSON, escapeHtml, uid } from './core.js';
const storageKey="club_portal_submissions_v2"; const s=requireAuth(); attachLogout();
const userArea=document.getElementById('userArea'); const adminArea=document.getElementById('adminArea');
if(s.role==='admin') adminArea.classList.remove('hidden'); else { userArea.classList.remove('hidden'); document.getElementById('owner').value=s.username; renderMySubmissions(s.username); }
function getData(){return getJSON(storageKey,[])} function setData(r){setJSON(storageKey,r)} function findIndexById(id){return getData().findIndex(r=>r.id===id)}
const submissionForm=document.getElementById('submissionForm'); const userFeedback=document.getElementById('userFeedback'); const resetFormBtn=document.getElementById('resetFormBtn'); const myTableBody=document.querySelector('#mySubmissionsTable tbody');
function notify(msg){userFeedback.textContent=msg; userFeedback.classList.remove('hidden'); setTimeout(()=>userFeedback.classList.add('hidden'),2500)}
function clearForm(){submissionForm.reset(); submissionForm.dataset.editId=""; document.getElementById('submitBtn').textContent="Opslaan / Verzenden"}
function renderMySubmissions(owner){const rows=getData().filter(r=>r.owner===owner); myTableBody.innerHTML=""; rows.forEach(r=>{const tr=document.createElement('tr'); tr.innerHTML=`<td>${new Date(r.createdAt).toLocaleString()}</td><td>${escapeHtml(r.vereniging)}</td><td>${escapeHtml(r.thema)}</td><td>${escapeHtml(r.status||'Nieuw')}</td><td><button class="edit-my" data-id="${r.id}">Bewerken</button><button class="danger delete-my" data-id="${r.id}">Verwijder</button></td>`; myTableBody.appendChild(tr);})}
submissionForm?.addEventListener('submit',e=>{e.preventDefault(); if(s.role==='admin'){alert('Gebruik dit formulier als ingelogde gebruiker.'); return;} const fd=new FormData(submissionForm); const data=Object.fromEntries(fd.entries()); data.consent=fd.get('consent')?true:false; const rows=getData(); const now=new Date().toISOString();
  if(submissionForm.dataset.editId){const id=submissionForm.dataset.editId; const idx=findIndexById(id); if(idx>=0){rows[idx]={...rows[idx],...data,updatedAt:now}; setData(rows); notify('Wijzigingen opgeslagen (demo).')} clearForm(); renderMySubmissions(s.username); return;}
  rows.push({id:uid(), owner:s.username, status:'Nieuw', notes:'', createdAt:now, ...data}); setData(rows); clearForm(); notify('Dank! Je inzending is opgeslagen (demo).'); renderMySubmissions(s.username);
});
resetFormBtn?.addEventListener('click', clearForm);
myTableBody?.addEventListener('click', e=>{const id=e.target.dataset.id; if(!id) return; const rows=getData(); const idx=findIndexById(id); if(idx<0) return; if(e.target.classList.contains('delete-my')){ if(!confirm('Mijn inzending verwijderen?')) return; rows.splice(idx,1); setData(rows); renderMySubmissions(s.username);} else if(e.target.classList.contains('edit-my')){ const row=rows[idx]; for(const [k,v] of Object.entries(row)){const el=submissionForm.querySelector(`[name="${k}"]`); if(el){ if(el.type==='checkbox') el.checked=!!v; else el.value=v; }} submissionForm.dataset.editId=id; document.getElementById('submitBtn').textContent='Wijzigingen opslaan'; window.scrollTo({top:0,behavior:'smooth'});} });
const tableBody=document.querySelector('#submissionsTable tbody'); const searchInput=document.getElementById('search'); const exportCsvBtn=document.getElementById('exportCsvBtn'); const clearAllBtn=document.getElementById('clearAllBtn');
function renderTable(filter=""){const rows=getData(); const q=filter.trim().toLowerCase(); const filtered=!q?rows:rows.filter(r=>[r.voornaam,r.achternaam,r.vereniging,r.thema,r.hulpvraag,r.email,r.telefoon,r.status,r.notes,r.owner].filter(Boolean).some(v=>String(v).toLowerCase().includes(q))); tableBody.innerHTML=""; filtered.forEach((r,idx)=>{const tr=document.createElement('tr'); tr.innerHTML=`<td>${new Date(r.createdAt).toLocaleString()}</td><td>${escapeHtml(r.voornaam)}</td><td>${escapeHtml(r.achternaam)}</td><td>${escapeHtml(r.vereniging)}</td><td>${escapeHtml(r.thema)}</td><td>${escapeHtml(r.hulpvraag)}</td><td>${escapeHtml(r.email)}</td><td>${escapeHtml(r.telefoon)}</td><td><select data-idx="${idx}" class="status-select">${["Nieuw","In behandeling","Afgerond"].map(s=>`<option ${r.status===s?"selected":""}>${s}</option>`).join("")}</select></td><td><textarea data-idx="${idx}" class="note-input" rows="2" placeholder="Notitiesâ€¦">${escapeHtml(r.notes||"")}</textarea></td><td><button data-idx="${idx}" class="save-row">Opslaan</button><button data-idx="${idx}" class="danger delete-row">Verwijder</button></td>`; tableBody.appendChild(tr);});}
function exportCsv(){const rows=getData(); if(!rows.length){alert('Geen data om te exporteren.'); return;} const headers=["id","createdAt","owner","voornaam","achternaam","vereniging","hulpvraag","email","telefoon","thema","status","notes","consent"]; const csv=[headers.join(",")].concat(rows.map(r=>headers.map(h=>`"${String(r[h]??"").replaceAll('"','""')}"`).join(","))).join("\n"); const blob=new Blob([csv],{type:"text/csv;charset=utf-8;"}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download=`inzendingen-${new Date().toISOString().slice(0,10)}.csv`; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);}
if(s.role==='admin'){ renderTable(""); searchInput?.addEventListener('input',()=>renderTable(searchInput.value)); exportCsvBtn?.addEventListener('click', exportCsv); clearAllBtn?.addEventListener('click', ()=>{if(confirm('Alles wissen?')){setData([]); renderTable("");}}); tableBody?.addEventListener('click', e=>{const idx=e.target.dataset.idx; if(e.target.classList.contains('delete-row')){const rows=getData(); rows.splice(Number(idx),1); setData(rows); renderTable(searchInput.value);} else if(e.target.classList.contains('save-row')){const rows=getData(); const row=rows[Number(idx)]; row.status=document.querySelector(`select.status-select[data-idx="${idx}"]`).value; row.notes=document.querySelector(`textarea.note-input[data-idx="${idx}"]`).value; setData(rows); alert('Opgeslagen.'); } }); }
